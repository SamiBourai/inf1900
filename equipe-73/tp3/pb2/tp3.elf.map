Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/9.2.0/../../../../avr/lib/avr5/crtatmega324pa.o (exit)
/usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
                              pb2.o (__do_copy_data)
/usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
                              pb2.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000003 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/9.2.0/../../../../avr/lib/avr5/crtatmega324pa.o
LOAD pb2.o
LOAD /usr/lib/gcc/avr/9.2.0/../../../../avr/lib/avr5/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/9.2.0/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/9.2.0/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/9.2.0/../../../../avr/lib/avr5/libatmega324pa.a
END GROUP
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000003]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x200
 *(.vectors)
 .vectors       0x0000000000000000       0x7c /usr/lib/gcc/avr/9.2.0/../../../../avr/lib/avr5/crtatmega324pa.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x000000000000007c                . = ALIGN (0x2)
                0x000000000000007c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000007c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000007c                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem.*)
                0x000000000000007c                . = ALIGN (0x2)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000007c                __ctors_start = .
 *(.ctors)
                0x000000000000007c                __ctors_end = .
                0x000000000000007c                __dtors_start = .
 *(.dtors)
                0x000000000000007c                __dtors_end = .
 SORT_BY_NAME(*)(.ctors)
 SORT_BY_NAME(*)(.dtors)
 *(.init0)
 .init0         0x000000000000007c        0x0 /usr/lib/gcc/avr/9.2.0/../../../../avr/lib/avr5/crtatmega324pa.o
                0x000000000000007c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000007c        0xc /usr/lib/gcc/avr/9.2.0/../../../../avr/lib/avr5/crtatmega324pa.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000088       0x16 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
                0x0000000000000088                __do_copy_data
 .init4         0x000000000000009e       0x10 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
                0x000000000000009e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000ae        0x8 /usr/lib/gcc/avr/9.2.0/../../../../avr/lib/avr5/crtatmega324pa.o
 *(.init9)
 *(.text)
 .text          0x00000000000000b6        0x4 /usr/lib/gcc/avr/9.2.0/../../../../avr/lib/avr5/crtatmega324pa.o
                0x00000000000000b6                __vector_22
                0x00000000000000b6                __vector_28
                0x00000000000000b6                __vector_1
                0x00000000000000b6                __vector_24
                0x00000000000000b6                __vector_12
                0x00000000000000b6                __bad_interrupt
                0x00000000000000b6                __vector_6
                0x00000000000000b6                __vector_3
                0x00000000000000b6                __vector_23
                0x00000000000000b6                __vector_30
                0x00000000000000b6                __vector_25
                0x00000000000000b6                __vector_11
                0x00000000000000b6                __vector_13
                0x00000000000000b6                __vector_17
                0x00000000000000b6                __vector_19
                0x00000000000000b6                __vector_7
                0x00000000000000b6                __vector_27
                0x00000000000000b6                __vector_5
                0x00000000000000b6                __vector_4
                0x00000000000000b6                __vector_9
                0x00000000000000b6                __vector_2
                0x00000000000000b6                __vector_21
                0x00000000000000b6                __vector_15
                0x00000000000000b6                __vector_29
                0x00000000000000b6                __vector_8
                0x00000000000000b6                __vector_26
                0x00000000000000b6                __vector_14
                0x00000000000000b6                __vector_10
                0x00000000000000b6                __vector_16
                0x00000000000000b6                __vector_18
                0x00000000000000b6                __vector_20
 .text          0x00000000000000ba       0xa8 pb2.o
                0x00000000000000ba                _Z3PWMRiS_ii
 .text          0x0000000000000162        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000162        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000162        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000162                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000162       0x9a pb2.o
                0x0000000000000162                main
 .text.libgcc.mul
                0x00000000000001fc        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000001fc        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000001fc        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000001fc        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000001fc        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000001fc        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000001fc        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000001fc        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000001fc        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000001fc        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000001fc        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000001fc        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000001fc        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000001fc        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000001fc        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000001fc        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000001fc        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000001fc        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000001fc        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000001fc        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000001fc        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
                0x00000000000001fc                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000001fc        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
                0x00000000000001fc                exit
                0x00000000000001fc                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000001fc        0x4 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
 *(.hightext)
 *(.hightext*)
 *(.progmemx.*)
                0x0000000000000200                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
                0x0000000000000200                _etext = .

.data           0x0000000000800100        0x4 load address 0x0000000000000200
                0x0000000000800100                PROVIDE (__data_start = .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/9.2.0/../../../../avr/lib/avr5/crtatmega324pa.o
 .data          0x0000000000800100        0x4 pb2.o
                0x0000000000800100                periode
                0x0000000000800102                back
                0x0000000000800103                on
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x0000000000800104                . = ALIGN (0x2)
                0x0000000000800104                _edata = .
                0x0000000000800104                PROVIDE (__data_end = .)

.bss            0x0000000000800104        0x4
                0x0000000000800104                PROVIDE (__bss_start = .)
 *(.bss)
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/9.2.0/../../../../avr/lib/avr5/crtatmega324pa.o
 .bss           0x0000000000800104        0x4 pb2.o
                0x0000000000800104                valid
                0x0000000000800105                a
                0x0000000000800107                off
 .bss           0x0000000000800108        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800108        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800108        0x0 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800108                PROVIDE (__bss_end = .)
                0x0000000000000200                __data_load_start = LOADADDR (.data)
                0x0000000000000204                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800108        0x0
                [!provide]                        PROVIDE (__noinit_start = .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end = .)
                0x0000000000800108                _end = .
                [!provide]                        PROVIDE (__heap_start = .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0xa44
 *(.stab)
 .stab          0x0000000000000000      0x84c pb2.o
 .stab          0x000000000000084c       0x6c /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_exit.o)
                                         0x78 (size before relaxing)
 .stab          0x00000000000008b8       0xd8 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_copy_data.o)
                                         0xe4 (size before relaxing)
 .stab          0x0000000000000990       0xb4 /usr/lib/gcc/avr/9.2.0/avr5/libgcc.a(_clear_bss.o)
                                         0xc0 (size before relaxing)

.stabstr        0x0000000000000000      0xf89
 *(.stabstr)
 .stabstr       0x0000000000000000      0xf89 pb2.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x21
 *(.comment)
 .comment       0x0000000000000000       0x21 pb2.o
                                         0x22 (size before relaxing)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/lib/gcc/avr/9.2.0/../../../../avr/lib/avr5/crtatmega324pa.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x6cc
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x6cc /usr/lib/gcc/avr/9.2.0/../../../../avr/lib/avr5/crtatmega324pa.o

.debug_abbrev   0x0000000000000000      0x66e
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x66e /usr/lib/gcc/avr/9.2.0/../../../../avr/lib/avr5/crtatmega324pa.o

.debug_line     0x0000000000000000       0x1d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib/gcc/avr/9.2.0/../../../../avr/lib/avr5/crtatmega324pa.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x255
 *(.debug_str)
 .debug_str     0x0000000000000000      0x255 /usr/lib/gcc/avr/9.2.0/../../../../avr/lib/avr5/crtatmega324pa.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)
OUTPUT(tp3.elf elf32-avr)
LOAD linker stubs
